<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.exception.qms.domain.mapper.UserQuestionContributionMapper" >
  <resultMap id="BaseResultMap" type="com.exception.qms.domain.entity.UserQuestionContribution" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="question_id" property="questionId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, question_id, type, create_time, is_deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_ums_user_question_contribution
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="queryUserQuestionContribution" resultMap="BaseResultMap">
    select id, create_time from t_ums_user_question_contribution
    where user_id = #{userId} and create_time <![CDATA[<=]]> #{tomorrow}
    and create_time <![CDATA[>=]]> #{lastYearToday} and is_deleted = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_ums_user_question_contribution
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.exception.qms.domain.entity.UserQuestionContribution" >
    insert into t_ums_user_question_contribution (user_id, question_id,
      type, create_time, is_deleted
      )
    values (#{userId,jdbcType=BIGINT}, #{questionId,jdbcType=BIGINT},
      #{type,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 0
      )
  </insert>
  <insert id="insertSelective" parameterType="com.exception.qms.domain.entity.UserQuestionContribution" >
    insert into t_ums_user_question_contribution
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.exception.qms.domain.entity.UserQuestionContribution" >
    update t_ums_user_question_contribution
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.exception.qms.domain.entity.UserQuestionContribution" >
    update t_ums_user_question_contribution
    set user_id = #{userId,jdbcType=BIGINT},
      question_id = #{questionId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>